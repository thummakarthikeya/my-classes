Employee Attendance Check
A company decides to reward employees with a bonus if their monthly attendance is satisfactory. An employee is eligible for the bonus if their attendance percentage is greater than or equal to 75%.

Given the total number of working days in a month and the number of days the employee was present, write a program to determine whether the employee is eligible for the bonus.

Take two inputs: presentDays and totalDays.
If attendance is >= 75%, employee is eligible for bonus.

Input Format:
------------------
Take two inputs: presentDays and totalDays.
If attendance is >= 75%, employee is eligible for bonus.


Print "Eligible for bonus" if attendance percentage is ≥ 75%.

Output Format:
-------------------
Print "Not eligible for bonus" if attendance percentage is < 75%.
Sample Input
20 16
Sample Output
Eligible for bonus
Constraints:
0 <= presentDays <= 1000

1 <= totalDays <= 1000



#include<stdio.h>
int main(){
    int presentDays,totalDays;
    scanf("%d%d", &totalDays,&presentDays);
    int attendancePercentage = (presentDays*100 / totalDays) ;

    (attendancePercentage >=75) ? printf("Eligible for bonus") : printf("Not eligible for bonus");
}



////////////////////////////////////////////////


Speeding Fine System
A traffic monitoring system is used to calculate fines based on a vehicle's speed.

The speed limit is set to 60 km/h.

If a vehicle exceeds the speed limit, the following fines are applied:

Speed > 60 and ≤ 80 → ₹100 fine

Speed > 80 → ₹500 fine

Speed ≤ 60 → No fine

Given the speed of a vehicle, write a program to determine the appropriate fine.

Input Format :
A single integer speed — the speed of the vehicle in km/h.

Output Format :

"₹100" if speed is more than 60 and up to 80.
"₹500" if speed is more than 80.
"No fine" if speed is 60 or less.
Sample Input
65
Sample Output
100


#include<stdio.h>
int main(){
    int Speed;
    scanf("%d", &Speed);

    ((Speed > 60) && Speed <=80) ? printf("100") : (Speed > 80 ) ? printf("500") : (Speed <= 60) ? printf("No Fine") : printf(" ");
}


////////////////////////////////////////////////


Uppercase to Lowercase
Write a c program to determine if a character is uppercase or lowercase using the ternary operator.
Sample Input
A
Sample Output
A is an uppercase letter.


#include<stdio.h>
int main(){
    char ch;
    scanf("%c", &ch);

    ((ch >= 65) && (ch <= 90) ) ? printf("%c is an uppercase letter.", ch) : printf("%c is a lowercase letter.", ch);
}



/////////////////////////////////////////////


LEAP_YEAR_PROGRAM
Develop a program to check whether a given year is a leap year or not, using logical operators and the ternary operator. 

Leap Year Rule:
----------------------
A year is a leap year if it satisfies:

Divisible by 4 AND not divisible by 100,
OR
Divisible by 400
Sample Input
2020
Sample Output
Leap Year
Constraints:
An integer value representing the year (e.g., 2020)
Leap Year or Not a Leap Year


#include<stdio.h>
int main(){
    int year;
    scanf("%d",&year);
    (((year%4 == 0) && year%100 != 0 )|| year%400 == 0)? printf("Leap Year") : printf("Not a Leap Year");
}



?/////////////////////////////////////////

Mobile Recharge Plan
A telecom company offers three different monthly data plans based on user data consumption. Your task is to write a program that suggests the correct plan based on the user's monthly data usage (in GB).

The plan selection rules are:

If usage is less than 2 GB → Plan A: ₹199/month

If usage is 2 GB to less than 10 GB → Plan B: ₹399/month

If usage is 10 GB or more → Plan C: ₹599/month

You must use the ternary operator to determine and display the recommended plan and its cost.

 Input Format :
A single integer usage — the user's monthly data usage in GB.

Output Format :
Print the recommended plan in the format:
"Plan A - ₹199"
"Plan B - ₹399"
"Plan C - ₹599"
Sample Input
1
Sample Output
Plan A - RS. 199


#include<stdio.h>
int main(){
    int plan;
    scanf("%d", &plan);
    (plan < 2) ? printf("Plan A - RS. 199") : ((plan > 2) && (plan <10)) ? printf("Plan B - RS. 399") : printf("Plan C - RS. 599");
}

///////////////////////////////////////





CompareTwoNumber
Create a C program that reads two integers from the user and prints "Equal" if they are equal, and "Not Equal" otherwise.(Use only if)
Sample Input
Input as :
Enter a number : 10 10
Sample Output
Output as :
Equal




/////////////////////////////////



NumberDivisible
Write a C program to check whether a number is divisible by 5 and 11 or not.
Sample Input
Input as : 
Enter a number : 55
Sample Output
Output as : 
55 is divisible by both 5 and 11



////////////////////////////////


OddEven
Develop a C program that takes an integer input and checks whether it is even or odd. Print "Even" if it's even, and "Odd" if it's odd.  (Use Only If )
Sample Input
Input as : 
Enter a Integer : 20
Sample Output
Output as : 
Even
Explanation
[Use Only If ]




//////////////////////////////


HourFormat
Write a C program that takes an hour in the 24-hour format as input and identifies the time of day as "Morning," "Afternoon," "Evening," or "Night." Implement this using a series of if statements. Ensure that the program also checks for invalid input, displaying an appropriate message if the entered hour is not within the valid range (0-23). Present the program with a suitable title and header for clarity.
Sample Input
Input as :
Enter the hour (24-hour format): 13
Sample Output
Output as :
It's Afternoon.
Explanation
NA




//////////////////////////////////


CheckVowel
Develop a C program that reads a character from the user and prints "Vowel" if the character is a vowel (a, e, i, o, u or their uppercase equivalents), and "Consonant" if it's a consonant.
Sample Input
Input as : 
Enter a character : I
Sample Output
Output as :
Vowel
Explanation
NA


/////////////////////////////////


ATM_Machine
Write a C program that takes a withdrawal amount from the user and checks if it is a multiple of 100 before processing. If it is not a multiple of 100, display "Invalid amount".
Sample Input
2500
Sample Output
Valid amount



/////////////////////////////////


CeheckDIgitSum_Even_Or_Odd
Write a C program that takes a two digit number from the user and checks whether the sum of its digits is even.
Sample Input
1234
Sample Output
Sum of digits is even


/////////////////////////////////

Check_Weekend
Write a C program that takes a day number (1 to 7) as input and checks whether it is a weekday or weekend.
Assumptions :

1 = Monday
2 = Tuesday
3 = Wednesday
4 = Thursday
5 = Friday
6 = Saturday
7 = Sunday

Rules:

Output "Weekday" for 1 to 5
Output "Weekend" for 6 and 7

If the input is outside 1–7, display "Invalid day number"
Sample Input
3
Sample Output
Weekday




///////////////////////////////////////////


Check_Last_Digit
Write a C program to check whether the last digit of a number is 5
Sample Input
124
Sample Output
Last digit is 5




//////////////////////////////////////////


AbsoluteValue
Write a C program that takes an integer from the user and prints its absolute value without using the abs() function.


Sample Input
-45
Sample Output
45




//////////////////////////////////////////


Check_Digit_Or_Not
Write a C program to check if an entered character is a digit or not a digit.
Sample Input
9
Sample Output
Digit




