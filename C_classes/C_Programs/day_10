CalculateGrades

[Title:- Determine Student Grade Based on Total Marks] 
-------------------------------------------------------
Write a program that takes the marks of five subjects as input (each subject mark should be between 0 and 100). The program should:

Check if all marks are within the range of 0–100. If any marks are invalid, display an error message and exit.
If any subject mark is below 35, directly display "Fail" without calculating the total or grade.
Otherwise, calculate the total marks, percentage, and determine the grade using the following criteria:

-> 90%–100%: Grade A
-> 75%–89%: Grade B
-> 50%–74%: Grade C
-> 35%–49%: Grade D
-> Below 35%: Fail

Test Cases-1 :-
---------------
Input:
------
Subject 1: 95
Subject 2: 89
Subject 3: 88
Subject 4: 92
Subject 5: 91

Output:
-------
Total Marks: 455
Percentage: 91.0%
Grade: A (Valid)

Test Cases-2 :-
---------------
Input:
------
Subject 1: 85
Subject 2: 90
Subject 3: 110
Subject 4: 88
Subject 5: 92

Output:
-------
"Invalid input. Marks for each subject must be between 0 and 100." (Invalid)

Test Cases-3 :-
----------------
Input:
------
Subject 1: 20
Subject 2: 25
Subject 3: 30
Subject 4: 35
Subject 5: 40

Output:
--------
"Fail" (Valid)

Test Cases-4 :-
----------------
Input:
------
Subject 1: 40
Subject 2: 50
Subject 3: 34
Subject 4: 60
Subject 5: 70

Output:
--------
"Fail" (Valid - One subject is below 35)
Sample Input
95
89
88
92
91
Sample Output
Total Marks: 455
Percentage: 91.0%
Grade: A


#include<stdio.h>
int main(){
   int subject1,subject2,subject3,subject4,subject5,subjects;
   float Percentage;

   scanf("%d%d%d%d%d",&subject1,&subject2,&subject3,&subject4,&subject5);
   
    switch(subject1 < 35 ||subject2 < 35 ||subject3 < 35 ||subject4 < 35 ||subject5 < 35){
        
        case 1:
        printf("Fail");
        break;
        
        case 0:
        subjects = subject1+subject2+subject3+subject4+subject5;
        printf("Total Marks: %d\n",subjects);
        Percentage = ((float)subjects/500)*100;
        printf("Percentage: %.2f%\n",Percentage);
        if(Percentage>=90 && Percentage<=100){
            printf("Grade: A\n");
        }else if(Percentage>=75 && Percentage<=89){
            printf("Grade: B");
        }else if(Percentage>=50 && Percentage<=74){
            printf("Grade: C");
        }else if(Percentage>=35 && Percentage<=49){
            printf("Grade: D");
        }else if(Percentage<35){
            printf("Fail");
        }
        
    }
}

/////////////////////////////////////////////////


Check Upper/Lower Case
Write a c program to check the given character is in uppercase or lowercase by using switch case.
Sample Input
Sample Input :
Enter Character : A
Sample Output
Sample Output :UpperCase


#include <stdio.h>
int main() {
    char ch;
    scanf("%c", &ch);

    switch(ch >= 65 && ch<=90) {
        case 1:
            printf("UpperCase");
            break;

        case 0:
            printf("LowerCase");
            break;

        default:
            printf("Not an alphabet");
    }

    return 0;
}



///////////////////////////////////////////////////


FindMaxBetweenTwo
Write a C program to find the maximum between two numbers using Switch statement.
Sample Input
10
20
Sample Output
20


#include<stdio.h>
int main(){
    int a,b;
    scanf("%d%d",&a,&b);

    switch(a > b){
        case 1:
        printf("%d", a);
        break;

        case 0:
        printf("%d", b);
        break;
    }
    return 0;
}



//////////////////////////////////////////////

DaysInAMonth
[Title: Determine the Number of Days in a Month Based on User Input]
--------------------------------------------------------------------

Problem Statement :-
--------------------
Write a C program that takes a month number (1-12) as input from the user and prints the number of days in that month using a switch statement. If the user enters a number outside the range of 1-12, the program should display an error message.

Explanation :-
--------------
-> Use a switch statement to handle different cases for each month:
-> For months with 31 days (January, March, May, July, August, October, December), display "31 days".
-> For months with 30 days (April, June, September, November), display "30 days".
-> For February (month 2), print "28 or 29 days (depending on leap year)" (Leap years are not considered in this basic program).
-> For any invalid month number (not between 1 and 12), print "Invalid month number".

Program Logic :-
----------------
Prompt the user to enter the month number (1-12).
Use a switch statement to check the month number and print the corresponding number of days.
If the input is invalid (not between 1 and 12), print an error message.

Test Case 1 :- [Valid Month with 31 Days]
--------------
Input :-
---------
Enter Month: 1

Output :-
---------
31 days

Test Case 2 :- [Valid Month with 30 Days]
--------------
Input :-
--------
Enter Month: 4

Output :-
----------
30 days

Test Case 3 :- [Invalid Month (Greater than 12)]
--------------
Input :-
--------
Enter Month: 13

Output :-
---------
Invalid month number

Test Case 4 :- [February (28 or 29 days)]
--------------
Input :-
---------
Enter Month: 2

Output :-
---------
28 or 29 days (depending on leap year)

Test Case 5 :- Invalid Month (Less than 1)
--------------
Input :-
--------
Enter Month: 0/-2[-ve/+ve]

Output :-
----------
Invalid month number
Sample Input
4
Sample Output
30 Days



#include<stdio.h>
int main(){
    int a;
    scanf("%d",&a);

    switch(a){
        case 1:
        printf("31 days");
        break;

        case 2:
        printf("28 or 29 days (depending on leap year)");
        break;
        
        case 3:
        printf("31 days");
        break;

         case 4:
        printf("30 days");
        break;
        
        case 5:
        printf("31 days");
        break;

        case 6:
        printf("30 days");
        break;

        case 7:
        printf("31 days");
        break;

        case 8:
        printf("31 days");
        break;

        case 9:
        printf("30 days");
        break;

        case 10:
        printf("31 days");
        break;

        case 11:
        printf("30 days");
        break;

        case 12:
        printf("31 days");
        break;

        default:
        printf("Invalid month number");
        

    }

    return 0;
}



/////////////////////////////////////////



